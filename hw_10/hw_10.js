// #### Task 1 üíª
// –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å Car.
// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–ª–∞—Å—Å–∞ SportCar –∏ LuxuryCar.
// –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–ª–∞—Å—Å–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ä–∫—É –∞–≤—Ç–æ –∏ —Ç–∏–ø –¥–≤–∏–≥–∞—Ç–µ–ª—è.
// –î–æ—á–µ—Ä–Ω–∏–µ –∫–ª–∞—Å—Å—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥—è—â–∏–µ –º–∞–∫—Å–∏–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
// –∏ —Ü–µ–Ω—É –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â–∏–µ —Ç–∏–ø—ã –∞–≤—Ç–æ.
// –í—ã–≤–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: `This is <carName>.
// It has <engineType> engine and max speed equal to <maxSpeed>.
// Approximetly cost of the car is <carCost>`.
// (–í –∑–∞–¥–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –Ω–µ —Ç–æ–ª—å–∫–æ public –º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –≥–¥–µ —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ)

class Car {
    constructor(brand, engine) {
        this.brand = brand
        this.engine = engine
    }

    getCarBasicInfo() {
        return `${this.brand} with ${this.engine} engine`
    }
}

class SportCar extends Car {
    constructor(brand, engine, maxSpeed, carCost) {
        super(brand, engine)
        this.maxSpeed = maxSpeed
        this.carCost = carCost
    }

    getSportCarInfo() {
        return `This is ${this.getCarBasicInfo()}. It has a max speed equal to ${this.maxSpeed} km/h. Approximately cost of the car is $${this.carCost}.`
    }

}

class LuxuryCar extends Car {
    constructor(brand, engine, maxSpeed, carCost) {
        super(brand, engine)
        this.maxSpeed = maxSpeed
        this.carCost = carCost
    }

    getLuxuryCarInfo() {
        return `This is ${this.getCarBasicInfo()}. It has a max speed equal to ${this.maxSpeed} km/h. Approximately cost of the car is $${this.carCost}.`
    }
}

const mySportCar = new SportCar('SportCar', 'V8', 350, 250000)
console.log(mySportCar.getSportCarInfo())
const myLuxuryCar = new LuxuryCar('LuxuryCar', 'V12', 250, 450000)
console.log(myLuxuryCar.getLuxuryCarInfo())

// #### Task 2 üíª
// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –ª—é–¥–µ–π.
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É `My name is <name>`.
// –ò –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â–µ–µ –∏–º—è

class Person {
    constructor(name) {
        this.name = name
    }

    welcomeMessage() {
        return `My name is ${this.name}.`
    }
}

const person1 = new Person('firstPersonName')
const person2 = new Person('secondPersonName')

console.log(person1.welcomeMessage())
console.log(person2.welcomeMessage())

// #### Task 3 üíª
// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –º–∞—à–∏–Ω.
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ –≤—ã–≤–æ–¥—è—â–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–≤–µ—Ä–µ–π –º–∞—à–∏–Ω—ã,
// –∏ —Å –∫–∞–∫–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä—É–ª—å.
// –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è,
// —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—à–∏–Ω–∞—Ö.
// –ö –ø—Ä–∏–º–µ—Ä—É `This car has 3 doors and this is left-hand drive car`


class CarsVerf {
    constructor(brandCar, doors, steering) {
        this.brandCar = brandCar
        this.doors = doors
        this.steering = steering
    }

    carInfo() {
        return `This car has ${this.doors} doors and this is ${this.steering} drive car.`
    }
}

const car1 = new CarsVerf('Toyota', 4, 'left-hand drive');
const car2 = new CarsVerf('Mazda', 2, 'right-hand drive');

console.log(car1.carInfo())
console.log(car2.carInfo())