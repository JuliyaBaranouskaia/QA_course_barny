console.log('NORMAL level')

//Task 1 :
// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–¥–∞–µ—Ç —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è.
// –í—ã–≤–µ–¥–∏—Ç–µ –ø—Ä–∏–≤–µ—Ç—Å–≤–∏–µ `–ü—Ä–∏–≤–µ—Ç <–ò–º—è> <–§–∞–º–∏–ª–∏—è>` 5 —Ä–∞–∑ –∏—Å–ø–æ–ª—å–∑—É—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–∞–∑–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä

function userGreeting(firstName, lastName) {
    console.log(`Hello ${firstName} ${lastName}`)
    console.log(`Hello ${firstName.toUpperCase()} ${lastName.toUpperCase()}`)
    console.log(`Hello ${firstName.toUpperCase()} ${lastName.toLowerCase()}`)
    console.log(`Hello ${firstName.toLowerCase()} ${lastName.toUpperCase()}`)
    console.log(`Hello ${firstName.toLowerCase()} ${lastName.toLowerCase()}`)
}

let firstName = 'Olga'
let lastName = 'Petrova'

userGreeting(firstName, lastName)

//Task 2 :
// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'.
// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —Å—Ç—Ä–æ–∫–µ: –µ—Å–ª–∏ –µ—Å—Ç—å - –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–∑–∏—Ü–∏—é –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ '—É—á—É', –µ—Å–ª–∏ –Ω–µ—Ç - –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É `–î–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç`

let exampleString0 = '—è —É—á—É typescript!'
let substring = '—É—á—É'

let position = exampleString0.indexOf(substring)

if (position !== -1) {
    console.log(`–ü–æ–∑–∏—Ü–∏—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ '${substring}': ${position}`)
} else {
    console.log('–î–∞–Ω–Ω–æ–π –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç')
}

//#### Task 3 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é —Å–∏–º–≤–æ–ª–∞ –≤ —Å—Ç—Ä–æ–∫–µ.
// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –¥–ª–∏–Ω—ã —Å—Ç—Ä–æ–∫–∏, —Ç–æ –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ: `–í—ã –≤—ã—à–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É —Å—Ç—Ä–æ–∫–∏`


function getSymbolAtPosition(str, symbolPosition) {
    if (symbolPosition < str.length) {
        return `–°–∏–º–≤–æ–ª –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ ${symbolPosition}: ${str[symbolPosition]}`
    } else {
        return '–í—ã –≤—ã—à–ª–∏ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—É —Å—Ç—Ä–æ–∫–∏'
    }
}

let exampleString = '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!'
let symbolPosition = 5
getSymbolAtPosition(exampleString, symbolPosition)
console.log(getSymbolAtPosition(exampleString, symbolPosition))

// #### Task 4 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
// –†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç–æ—á–∫–æ–π –∏–ª–∏ –Ω–µ—Ç.
// –ï—Å–ª–∏ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –≤—ã–≤–µ—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - `–î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ`,
// –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ `–í –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–æ—á–∫–∏`


function checkSentenceEnding(str) {
    if (str.endsWith('.')) {
        return '–î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–µ–Ω–æ'
    } else {
        return '–í –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ç–æ—á–∫–∏'
    }
}

console.log(checkSentenceEnding(exampleString0))

// #### Task 5 üíª
// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'.
// –í—ã—Ä–µ–∂–∏—Ç–µ –∏–∑ –Ω–µ–µ —Å–ª–æ–≤–æ '—É—á—É' –∏ —Å–ª–æ–≤–æ 'typescript' —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ (—á–µ—Ä–µ–∑ substring, slice).

let word1 = exampleString0.substring(2, 5)
console.log(word1)

let word2 = exampleString0.slice(6, 15)
console.log(word2)

// #### Task 6 üíª
// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '—è —É—á—É typescript!'.
// –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ split –∑–∞–ø–∏—à–∏—Ç–µ –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞.

// #### Task 7 üíª
// –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞ '                —è —É—á—É typescript!                '. –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É, –±–µ–∑ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –∏ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏.

let wordsArray = exampleString0.split(' ')
console.log(wordsArray)

// #### Task 8 üíª
// –î–∞–Ω–æ —á–∏—Å–ª–æ 8.829734872948. –í—ã–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ —Å 3 –∑–Ω–∞—á–∞—â–∞–º–∏ —Ü–∏—Ñ—Ä–∞–º–∏ –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏

let numExample = 8.829734872948
console.log(numExample.toFixed(3))

// #### Task 9 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä—è—é—â–∏–π —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º –∏–ª–∏ –Ω–µ—Ç.
// –ï—Å–ª–∏ —è–≤–ª—è–µ—Ç—Å—è - –≤—ã–≤–µ—Å—Ç–∏ –µ–≥–æ, –µ—Å–ª–∏ –Ω–µ—Ç - –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ —Ü–µ–ª–æ–π —á–∞—Å—Ç–∏.

function checkInteger(num) {
    if (Number.isInteger(num)) {
        console.log(`–ß–∏—Å–ª–æ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º: ${num}`)
    } else {
        console.log(`–ß–∏—Å–ª–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–º. –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ —Ü–µ–ª–æ–π —á–∞—Å—Ç–∏: ${Math.round(num)}`)
    }
}

checkInteger(5)
checkInteger(5.11)

// #### Task 10 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ,
// –±–æ–ª—å—à–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞.
// #### Task 11 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥—ã –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ,
// –±–æ–ª—å—à–µ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞.

function roundNumbers(num) {
    // –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –º–µ–Ω—å—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ
    let roundedDown = Math.floor(num)

    // –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ –±–æ–ª—å—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ
    let roundedUp = Math.ceil(num)

    // –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
    let roundedNearest = Math.round(num)

    return {
        roundedDown,
        roundedUp,
        roundedNearest,
    }
}

let numExampleForTask10 = 98.7
let roundedResults = roundNumbers(numExampleForTask10)

console.log(`–ò—Å—Ö–æ–¥–Ω–æ–µ —á–∏—Å–ª–æ: ${numExampleForTask10}`)
console.log(`–ë–ª–∏–∂–∞–π—à–µ–µ –º–µ–Ω—å—à–µ–µ —Ü–µ–ª–æ–µ: ${roundedResults.roundedDown}`)
console.log(`–ë–ª–∏–∂–∞–π—à–µ–µ –±–æ–ª—å—à–µ–µ —Ü–µ–ª–æ–µ: ${roundedResults.roundedUp}`)
console.log(`–ë–ª–∏–∂–∞–π—à–µ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: ${roundedResults.roundedNearest}`)


// #### Task 12 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –≤–æ–∑–≤–æ–¥—è—â–∏–π —á–∏—Å–ª–æ –≤ —Å—Ç–µ–ø–µ–Ω—å.
// –°—Ç–µ–ø–µ–Ω—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫ –º–µ—Ç–æ–¥—É.
// #### Task 13 üíª
// –î–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ.
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –≤–æ–∑–≤–æ–¥—è—â–∏–π —á–∏—Å–ª–æ –≤ —Å—Ç–µ–ø–µ–Ω—å.
// –°—Ç–µ–ø–µ–Ω—å –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫ –º–µ—Ç–æ–¥—É.

function powerCalculation(num, extent) {
    return Math.pow(num, extent)
}

let num = 2
let extent = 3
console.log(`–†–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è —á–∏—Å–ª–∞ –≤ —Å—Ç–µ–ø–µ–Ω—å: ${powerCalculation(num, extent)}`)


// #### Task 14 üíª
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.
// –î–∏–∞–ø–∞–∑–æ–Ω –∑–∞–¥–∞–µ—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ñ—É–Ω—Ü–∏–∏

function getRandomInt(min, max) {
    min = Math.ceil(min)
    max = Math.floor(max)
    return Math.floor(Math.random() * (max - min + 1)) + min
}

let minRange = 0
let maxRange = 10

console.log(`–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ ${minRange} - ${maxRange}: ${getRandomInt(minRange, maxRange)}`)

// #### Task 15 üíª
// –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ.
// –î–∏–∞–ø–∞–∑–æ–Ω –∑–∞–¥–∞–µ—Ç—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ñ—É–Ω—Ü–∏–∏

function getRandomFloat(min, max) {
    return Math.random() * (max - min) + min
}

let randomNumber = getRandomFloat(minRange, maxRange)
console.log(`–ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π –≤ –∑–∞–¥–∞–Ω–Ω–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ ${minRange} - ${maxRange}: ${randomNumber}`)

// #### Task 16 üíª
// –í—ã–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Å–µ–≥–æ–¥–Ω–µ—à–Ω–µ–≥–æ –¥–Ω—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ: "—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞: –º–µ—Å—è—Ü/–≥–æ–¥/–¥–µ–Ω—å.
// –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —á–∞—Å—ã:–º–∏–Ω—É—Ç—ã:—Å–µ–∫—É–Ω–¥—ã.". –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –º–µ—Ç–æ–¥—ã Date.

let currentDate = new Date()

let year = currentDate.getFullYear()
let month = currentDate.getMonth() + 1 // –º–µ—Å—è—Ü—ã –∏–¥—É—Ç –æ—Ç 0 –¥–æ 11, –ø–æ—ç—Ç–æ–º—É –¥–æ–±–∞–≤–ª—è–µ–º 1
let day = currentDate.getDate()
let hours = currentDate.getHours()
let minutes = currentDate.getMinutes()
let seconds = currentDate.getSeconds()

console.log(`–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: ${month}/${year}/${day}`)
console.log(`–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${hours}:${minutes}:${seconds}.`)


/*_ –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å _

const x = true && " 0 " || false // –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ 0
const y = false || null || 1 && 2 // –±—É–¥–µ—Ç —Ä–∞–≤–Ω–æ 2
const z = "false" || true && 24 // –±—É–¥–µ—Ç false
*/

//_ –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–∞–¥–∞—á—É _
// –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ n (–ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≥–¥–µ n —Ä–∞–≤–Ω–æ –ª—é–±–æ–º—É —á–∏—Å–ª—É)
// –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–∞–±–ª–∏—Ü—É(–Ω–∞–±–æ—Ä —Å—Ç—Ä–æ–∫) —É–º–Ω–æ–∂–µ–Ω–∏—è –¥–ª—è —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n.
// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏.
//–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞ –¥–ª—è n = 5: 1 2 3 4 5 2 4 6 8 10 3 6 9 12 15 4 8 12 16 20 5 10 15 20 25
// –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:
//–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã for. –í—ã–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–∞, —Ä–∞–∑–¥–µ–ª—è—è –∏—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏.–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏.

let n = 5
let resultForTask1 = ''

for (let i = 1; i <= n; i++) {
    for (let j = 1; j <= n; j++) {
        resultForTask1 += `${i * j} `
    }
}
console.log(resultForTask1.trim())

//_ –†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–∞–¥–∞—á—É _
// –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ n –∏ –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –≤—Å–µ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ n.
//–ü—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ - —ç—Ç–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 1, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ 1 –∏ –Ω–∞ —Å–∞–º–æ —Å–µ–±—è.
//–ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞ –¥–ª—è n = 20: 2, 3, 5, 7, 11, 13, 17, 19

function isEven(num) {
    if (num < 2) return false
    for (let i = 2; i <= Math.sqrt(num); i++) {
        if (num % i === 0) return false
    }
    return true
}

function printEven(n) {
    let evensNumbers = []
    for (let i = 2; i <= n; i++) {
        if (isEven(i)) {
            evensNumbers.push(i)
        }
    }
    console.log(evensNumbers.join(', '))
}

let numberForTask2 = 20
printEven(numberForTask2)

//–†–µ–∞–ª–∏–∑—É–π—Ç–µ –∑–∞–¥–∞—á—É _
// –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä–∞—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ n
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 2 –¥–æ n (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ).
//–ü—Ä–∏–º–µ—Ä: –î–ª—è 10; // 30 (2 + 4 + 6 + 8 + 10)*/

function sumOfEvenNumbers(n) {
    let sum = 0 //  –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É–º–º—ã
    for (let i = 2; i <= n; i += 2) { // –ø–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —á–µ—Ç–Ω—ã–µ —á–∏—Å–ª–∞
        sum += i
    }
    return sum
}

let taskNum = 10
let result = sumOfEvenNumbers(taskNum)
console.log(`—Å—É–º–º—É –≤—Å–µ—Ö —á–µ—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç 2 –¥–æ  ${taskNum} (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ) : ${result}`)
